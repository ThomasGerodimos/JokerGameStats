package jokergamestats;


import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import java.awt.Desktop;
import java.io.File;
import okhttp3.OkHttpClient;
import okhttp3.Request;

/**
 *
 * @author Iraklis Proviadakis and Thomas Gerodimos
 */
public class JokerStatsFrame extends javax.swing.JFrame {

    public JokerStatsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Προβολή Στατιστικών");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Εκτύπωση σε PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Προβολή σε γραφική μορφή");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Πίσω");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45"
            }
        ));
        jScrollPane1.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(60);
        }

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"
            }
        ));
        jScrollPane2.setViewportView(jTable4);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Προβολή Στατιστικών");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Στατιστικά για κληρώσεις αριθμών:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Στατιστικά για κληρώσεις αριθμών ΤΖΟΚΕΡ:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1726, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(68, 68, 68)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(21, 21, 21)
                .addComponent(jButton3)
                .addGap(47, 47, 47)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //Επιστροφή στην Αρχική
        StartFrame jf0 = new StartFrame();
        jf0.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Προβολή στατιστικών

        //Δημιουργώ ως String το url που θα καλέσω
        String urlToCall = "https://api.opap.gr/games/v1.0/5104/statistics";

        //Δημιουργούμε ένα αντικείμενο OkHttpClient 
        OkHttpClient client = new OkHttpClient();
        
        //Δημιουργούμε ένα αντικείμενο Request με όρισμα το url που θα καλέσουμε 
        Request request = new Request.Builder().url(urlToCall).build();

        //Ξεκινάμε και ζητάμε το url και ελέγχουμε εάν μας φέρνει αποτελέσματα
        try (okhttp3.Response response = client.newCall(request).execute()) {
            if (response.isSuccessful() && response.body() != null) {

                //Καταχωρούμε σε ένα String το αποτέλεσμα
                String responseString = response.body().string();

                //Δημιουργούμε ένα αντικείμενο GsonBuilder
                GsonBuilder builder = new GsonBuilder();
                builder.setPrettyPrinting();
                Gson gson = builder.create();

                //Πέρνουμε τα αποτελέσματα σε JsonObject και δημιουργούμε ένα JsonArray το "numbers"
                JsonObject json = gson.fromJson(responseString, JsonObject.class);
                JsonArray numbers = json.get("numbers").getAsJsonArray();

                
                //Δημιουργούμε τον πίνακα για τους αριθμούς
                DefaultTableModel model = new DefaultTableModel();

                //Ορίζουμε τις επικεφαλίδες των αριθμών
                model.setColumnIdentifiers(new String[]{"", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20",
                    "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45"});
                //Δημιουργούμε τους πίνακες για τις Κληρώσεις και τις Καθυστερήσεις των αριθμών
                String[] occurrences = new String[46];
                String[] delays = new String[46];

                //Counter
                int i = 1;
                //Διαπερνάμε τα JsonElements
                for (JsonElement number : numbers) {
                    JsonObject stats = number.getAsJsonObject();
                    //Καταχωρώ στον πίνακα τις Κληρώσεις και τις Καθυστερήσεις
                    occurrences[i] = stats.get("occurrences").toString();
                    delays[i] = stats.get("delays").toString();
                    i++;
                }
                //Καταχωρώ στον πίνακα * για επεξήγηση πληροφορίας
                occurrences[0] = "Εμφανίσεις";
                delays[0] = "Καθυστερήσεις";

                //Προσθέτω τις γραμμές και ενημερώνω το model
                model.addRow(occurrences);
                model.addRow(delays);
                jTable3.setModel(model);

                //Δημιουργούμε τον πίνακα για τους αριθμούς ΤΖΟΚΕΡ
                DefaultTableModel model2 = new DefaultTableModel();
                model2.setColumnIdentifiers(new String[]{"","1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"});

                //Δημιουργούμε ένα JsonArray το "bonusNumbers"
                JsonArray bonusNumbers = json.get("bonusNumbers").getAsJsonArray();

                //Αρχικοποίηση στους πίνακες για τις Κληρώσεις και τις Καθυστερήσεις των αριθμών ΤΖΟΚΕΡ
                occurrences = new String[21];
                delays = new String[21];

                //Διαπερνάμε τα JsonElements bonusNumbers (ΤΖΟΚΕΡ)
                int j = 1;
                for (JsonElement bonusNumber : bonusNumbers) {
                    JsonObject stats2 = bonusNumber.getAsJsonObject();
                    //System.out.println(stats.get("occurrences"));
                    //Καταχωρώ στον πίνακα τις Κληρώσεις και τις Καθυστερήσεις
                    occurrences[j] = stats2.get("occurrences").toString();
                    delays[j] = stats2.get("delays").toString();
                    j++;
                }

                //Καταχωρώ στον πίνακα * για επεξήγηση πληροφορίας
                occurrences[0] = "Εμφανίσεις";
                delays[0] = "Καθυστερήσεις";

                //Προσθέτω τις γραμμές και ενημερώνω το model
                model2.addRow(occurrences);
                model2.addRow(delays);
                jTable4.setModel(model2);
            }
        } catch (Exception ex) {
            // Ενημερωτικό μύνημα
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Δεν βρήκαμε δεδομένα", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Εκτύπωση του πίνακα σε αρχείο PDF
       
        //Ελέγχω εάν ο χρήστης πάτησε το κουμπί Προβολή στατιστικών
        if (jTable3.getValueAt(1, 0)!=null) {

            try {
                // Δημιουργώ ένα αντικείμενο doc μεγέθους Α3 για να χωρέσουν όλοι οι αριθμοί
                Document doc = new Document(PageSize.A3.rotate());

                //Το όνομα του αρχείου που θα δημιουργήσω
                PdfWriter.getInstance(doc, new FileOutputStream("joker.pdf"));

                //Ανοίγω το Document
                doc.open();

                //Δημιουργώ ένα PdfPTable για τους αριθμούς
                PdfPTable pdfTable = new PdfPTable(jTable3.getColumnCount());
                //Ορίζω το πλάτος του 100% για να χωρέσουν όλοι οι αριθμοί
                pdfTable.setWidthPercentage(100);

                //Ορισμός ελληνικών χαρακτήρων
                BaseFont arialGreek = BaseFont.createFont("C:\\Windows\\Fonts\\arial.ttf", "CP1253", BaseFont.EMBEDDED);
                Font arial = new Font(arialGreek, 14, Font.BOLD);
                Font arial18 = new Font(arialGreek, 18, Font.BOLD);

                //Επικεφαλίδα πίνακα αριθμών
                PdfPCell cell = new PdfPCell(new Paragraph("Στατιστικά των αριθμών που έχουν κληρωθεί", arial));
                cell.setColspan(46); // colspan 
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setBackgroundColor(BaseColor.YELLOW);//Χρώμα Background Πράσινο
                pdfTable.addCell(cell);//προσθέτω το κελί στον pdfTable

                //Πέρνω τους αριθμούς από το jTable1 και τους προσθέτω στο pdfTable
                for (int i = 0; i < jTable3.getColumnCount(); i++) {
                    PdfPCell cell1 = new PdfPCell(new Paragraph(jTable3.getColumnName(i)));
                    cell1.setBackgroundColor(BaseColor.YELLOW);
                    pdfTable.addCell(cell1);
                }

                //Πέρνω τα στατιστικά των αριθμών από το jTable1 και τους προσθέτω στο pdfTable
                for (int rows = 0; rows < jTable3.getRowCount(); rows++) {
                    for (int cols = 0; cols < jTable3.getColumnCount(); cols++) {
                        pdfTable.addCell(jTable3.getModel().getValueAt(rows, cols).toString());
                    }
                }

                //Δημιουργώ ένα PdfPTable για τους αριθμούς ΤΖΟΚΕΡ
                PdfPTable pdfTable2 = new PdfPTable(jTable4.getColumnCount());
                PdfPCell cell2 = new PdfPCell(new Paragraph("Στατιστικά των αριθμών ΤΖΟΚΕΡ που έχουν κληρωθεί", arial));
                cell2.setColspan(21); // colspan 
                cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell2.setBackgroundColor(BaseColor.CYAN);
                pdfTable2.addCell(cell2);

                //Παίρνω τους αριθμούς ΤΖΟΚΕΡ από το jTable4 και τους προσθέτω στο pdfTable2
                for (int i = 0; i < jTable4.getColumnCount(); i++) {
                    PdfPCell cell1 = new PdfPCell(new Paragraph(jTable4.getColumnName(i)));
                    cell1.setBackgroundColor(BaseColor.CYAN);
                    pdfTable2.addCell(cell1);
                }

                //Πέρνω τα στατιστικά των αριθμών ΤΖΟΚΕΡ από το jTable4 και τους προσθέτω στο pdfTable
                for (int rows = 0; rows < jTable4.getRowCount(); rows++) {
                    for (int cols = 0; cols < jTable4.getColumnCount(); cols++) {
                        pdfTable2.addCell(jTable4.getModel().getValueAt(rows, cols).toString());
                    }
                }

                //Προσθέτω στο PDF έγγραφο την πληροφορία και κλείνω το αρχείο
                doc.add(new Paragraph("Προβολή στατιστικών δεδομένων ΤΖΟΚΕΡ ", arial18));
                doc.add(Chunk.NEWLINE);
                doc.add(new Paragraph("1η Γραμμή: Αριθμοί", arial));
                doc.add(new Paragraph("2η Γραμμή: Κληρώσεις", arial));
                doc.add(new Paragraph("3η Γραμμή: Kαθυστερήσεις", arial));
                doc.add(Chunk.NEWLINE);
                doc.add(pdfTable);
                doc.add(new Paragraph(""));
                doc.add(Chunk.NEWLINE);
                doc.add(pdfTable2);
                doc.close();

                //Ανοίγω το αρχείο ώστε να το δεί ο χρήστης
                File myFile = new File("joker.pdf");
                Desktop.getDesktop().open(myFile);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Παρουσιάστηκε κάποιο πρόβλημα. Παρακαλώ επικοινωνήστε με τοιν διαχειριστή!");
            }
        }
        else{
            // Ενημερωτικό μύνημα
            JOptionPane.showMessageDialog(null, "Παρακαλώ πατήστε το κουμπί Προβολή στατιστικών ", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
        }
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Προβολή στατιστικών στοιχείων κληρώσεων σε γραφική μορφή
        //εμφανίζεται οθόνη, η οποία παρουσιάζει τα στατιστικά στοιχεία 
        //για τα δεδομένα που είναι αποθηκευμένα στη βάση δεδομένων
        //JFrame31 jf31 = new JFrame31();  
        //jf31.show();
        //dispose();
        JOptionPane.showMessageDialog(null, "Η λειτουργικότητα δεν υλοποιήθηκε", "Προβολή στατιστικών σε γραμική μορφή", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JokerStatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JokerStatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JokerStatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JokerStatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JokerStatsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
